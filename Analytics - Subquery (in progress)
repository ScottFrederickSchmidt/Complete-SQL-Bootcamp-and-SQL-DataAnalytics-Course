NOTES:
SELECT e.first_name, e.last_name
FROM employees e
WHERE e.emp_no IN (SELECT dm.emo_no FROM dept_manager);

----------------------------
SQL Subqueries with IN nested inside WHERE - exercise
Extract the information about all department managers who were hired between the 1st of January 1990 and the 1st of January 1995.

SELECT * FROM dept_mangers HAVING DATE BETWEEN



---------------------------
SQL Subqueries with EXISTS-NOT EXISTS nested inside WHERE - exercise
Select the entire information for all employees whose job title is “Assistant Engineer”. 
Hint: To solve this exercise, use the 'employees' table




---------------------------
USING SELECT and FROM NOTES:

SELECT emp_no FROM dept_manager WHERE emp_no=110022;
SELECT A.* FROM (SELECT e.emp_no AS employee_id,
MIN(de.dept_no) AS department_code,
(SELECT emp_no FROM dept_manager 
WHERE emp_no=110022) AS manager_ID
FROM employees e
JOIN dept_emp ON e.emp_no = de.emp_no
WHERE e.emp_no ON e.emp_no = de.emp_no
WHERE e.emp_no <= 10020
GROUP BY e.emp_no
ORDER BY e.emp_no) AS A
);

--------------------------------
SQL Subqueries with EXISTS-NOT EXISTS nested inside WHERE - exercise
Select the entire information for all employees whose job title is “Assistant Engineer”. 
Hint: To solve this exercise, use the 'employees' table

SOLUTION: SELECT * FROM employees WHERE job_title="Assistant Engineer";



-----------------------------------
SQL Subqueries nested in SELECT and FROM - exercise 1
Starting your code with “DROP TABLE”, create a table called “emp_manager” 
(emp_no – integer of 11, not null; dept_no – CHAR of 4, null; manager_no – integer of 11, not null)

SOLUTION:


---------------------------------
SQL Subqueries nested in SELECT and FROM - exercise 2
Fill emp_manager with data about employees, the number of the department they are working in, and their managers.

Your query skeleton must be:
Insert INTO emp_manager SELECT U.* FROM (A)

UNION (B) UNION (C) UNION (D) AS U;
A and B should be the same subsets used in the last lecture (SQL Subqueries Nested in SELECT and FROM). In other words, assign employee number 110022 as a manager to all employees from 10001 to 10020 (this must be subset A), and employee number 110039 as a manager to all employees from 10021 to 10040 (this must be subset B).
Use the structure of subset A to create subset C, where you must assign employee number 110039 as a manager to employee 110022.
Following the same logic, create subset D. Here you must do the opposite - assign employee 110022 as a manager to employee 110039.
Your output must contain 42 rows.

SOLUTION:



