LECTURE NOTES SQL Data Anaytics Course on Udemy

------------------
INTRO Exercise: 

Create the “customers” table in the “sales” database. 
Let it contain the following 5 columns: customer_id, first_name, last_name, email_address, and number_of_complaints.
Let the data types of customer_id and number_of_complaints be integer, while the data types of all other columns be VARCHAR of 255.

SOLUTION:
CREATE TABLE customers (customer_id INT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255), numer_of_complaints INT);
------------------
Data Definition Language (DDL)
-Create, alter, drop, rename, truncate.

Data Manipulation Language (DML)
-Select from sales
-using Insert

Data Control Language (DCL)
-Give rights to a specific person such as:
GRANT type_of_permission ON database_name.table_name TO 'username'@'localhost'

Database Administrators
-People who have complete rights to a database

-------------
BASIC DATABASE TERMINOLOGY:

Relational database = MySQL
Non-relational database = Mathematics and Programming

Excel < 1 million rows
Relational Database controls who changed what in the data making it reliable. 

--------------------
Relational schemas:
Use || for one
Use  > for many
For example, there can be many purchases but one customer, but only one customer.

----------------
CREATE DATABASE IF NOT EXISTS Sales;
CREATE SCHEMA IF NOT EXISTS Sales;

-------------------
CREATE TABLE sales ( purchase_number INT NOT NULL PRIMARY KEY AUTO_INCREMENT, date_of_purchase DATE NOT NULL, customer_id INT, item_code VARCHAR(10) NOT NULL);
SELECT * FROM sales.customer;    ===> database_object.sql_object 

---------------------
DEFAULT CONSTRAINT
CREATE TABLE customers ( customer_id INT AUTO_INCREMENT, first_name VARCHAR(255), last_nane VARCHAR(255),
email VARCHAR(255), num_complaints INT, PRIMARY KEY (customer_id);

ALTER TABLE customers 
CHANGE COLUMN num_complaints INT DETAULT 0;

--------------------
DROP looses EVERYTHING.
Truncate removes all records but keeps table structure.
DELETE removes records row by row. 

-------------------
SELECT 
    dept_no
    IFNULL(dept_name, "Department name noto provided")
FROM departments_dup;

IFNULL can only hold two paramters.
That is when COALESCE is needed.

Summary: IFNULL() and COALESCE() do not make any changes to the data set. 
They merely created an output where certain data values appear in place of NULL values.
-------------------



`
