SCOTT SCHMIDT 
IT 378 SQL FINAL GROUP PROJECT
SOLO DRAFT ATTEMPT

Write the DDL to create and populate each table based on the data I’ve provided in the Access database:

CREATE TABLE student 
(
SID varchar(12) NOT NULL,
Fname varchar(20) NOT NULL,
Lname varchar(20) NOT NULL,
Suffix varchar(4),
Street varchar(20) NOT NULL,
City varchar(20) NOT NULL,
State varchar(2) NOT NULL,
Zip Number(6) NOT NULL

CONSTRAINT student_SID_pk  PRIMARY KEY (SID);
);

CREATE TABLE book
( 
isbn varchar(13) NOT NULL,
Title varchar(20) NOT NULL,
Edition number(1) NOT NULL,
AuthorFname varchar (10) NOT NULL,
AuthorLname varchar (10) NOT NULL,
AuthhorSuffix varchar(3),
CourseNum  varchar(11) NOT NULL,

CONSTRAINT  isbn_book_pk PRIMARY KEY (isbn);
);


CREATE TABLE bookCopy
(
  isbn  number(7),
copyNum number(7),
price   number(7),

CONSTRAINT isbn_copyNum_fk FOREIGN KEY,
References book(isbn)
);


CREATE TABLE order(
 orderNumber  number(7) NOT NULL,
 isbn  number NOT NULL, 

CONSTRAINT  orderOrderNumberPK PRIMARY KEY(orderNumber),
CONSTRAINT orderISBNfk FOREIGN KEY(isbn)
References  book(isbn)
);


CREATE TABLE seller
(
SSID varcgar(11) NOT NULL,

CONSTRAINT seller_SSID_PK PRIMARY KEY (SSID),
CONSTRAINT seller_SSID_FK FOREIGN KEY(SSID) rerferences Student(SID)
);

CREATE TABLE buyer
(
BSID varchar(11) NOT NULL,

CONSTRAINT buyer_BSID_PK PRIMARY KEY BSID,
CONSTRAINT buyer_BSID_FK FOREIGN KEY BSID references Student(SID)
);

CREATE TABLE distributor(
DID varchar(11) NOT NULL
Dname varchar(21) NOT NULL,
Dstreet varchar(11) NOT NULL,
Dcity varchar(21) NOT NULL,
Dsta varchar(3) NOT NULL,
Dzip varchar(6) NOT NULL

CONSTRAINT distributor_DID_PK PRIMARY KEY(DID);
);

CREATE TABLE payment
(
 checkNum   number(7)  NOT NULL, 
date date NOT NULL,
SSID number NOT NULL,

CONSTRAINT  checkNum_PK  PRIMARY KEY (checkNum);
CONSTRAINT  SSID_FK FOREIGN KEY(SSID)
References  seller(SSID);
);

CREATE TABLE unretrieved_book
(
SUID varchar(11) NOT NULL,
ISBN varchar(13) NOT NULL,
SellingPrice number(10) NOT NULL,
DID varchar(11),

CONSTRAINT  ubook_pk PRIMARY KEY(SUID, ISBN),
CONSTRAINT  ubook_SUID_PK FOREIGN KEY(SUID)
references student(SUID),

CONSTRAINT  ubook_DID_PK  FOREIGN KEY(DID)
references distributor(DID) FOREIGN KEY(DID),

CONSTRAINT  ubook_ISBN_FK  FOREIGN KEY(ISBN)
references booK_copy(isbn)
);

CREATE TABLE retrieved_book
(
SRBID  varchar(11) NOT NULL,
ISBN   varchar(11) NOT NULL,
DateRetrieved date NOT NULL,

CONSTRAINT rbook_PK PRIMARY KEY book_copy(SSID, isbn),
CONSTRAINT rbook_SRBID_FK FOREIGN KEY reference book_copy(SSID),
CONSTRAINT rbook_ISBN_FK FOREIGN KEY references book_copy(isbn)
);

CREATE TABLE sold_book
(
SSID  varchar(11) NOT NULL,
ISBN  varchar(11) NOT NULL,
CheckNum varchar(11) NOT NULL,
SaleNum varchar(11) NOT NULL,

CONSTRAINT sold_book_SBSID_PK  PRIMARY KEY (SSID, ISBN),
CONSTRAINT sold_book_SBDID_FK  FOREIGN KEY  SSID references booK_copy(SSID),
CONSTRAINT sold_book_ISBN_FK   FOREIGN KEY  ISBN  references book_copy(ISBN),
CONSTRAINT sold_booK_CheckNum_FK  FOREIGN KEY CheckNum references  payment(CheckNum),
CONSTRAINT sold_booK_SaleNum_FK  FOREIGN KEY SaleNum  references  Sale(SaleNum)
);

CREATE TABLE sale 
(
SaleNum  varchar(11) NOT NULL,
SaleDate date NOT NULL, 
BSID varchar(11) NOT NULL, 

CONSTRAINT sale_SaleNum_PK  PRIMARY KEY,
CONSTRAINT sale_saleDate_FK FOREIGN KEY references payment(date),
CONSTRAINT  sale_BSID_FK   FOREIGN KEY references student(SID)
);


-------------------------------------------------
What books are required for each course?
SELECT title course FROM book;

-------------------------------------------------
What are the ISBN and titles of all the unsold (availabtle) books? 
SELECT bc.title, bc.isbn 
FROM book_Copy bc, book b
WHERE b.isbc=b.isbn
AND WHERE bc.ssid NOT IN 
  (SELECT SSBID FROM Sold_Book ) ;

--------------------------------------------------
Which students have picked up their books?
SELECT s.sid
FROM student s, retrieved_Book rb
WHERE s.sid=rb.SRBID;

-------------------------------------------------
Write a parameter query to find the book copies available for a given Course (where Course Number is input from keyboard.)  List by price.

SELECT bc.title, bc.isbn
FROM book_Copy bc, book b
WHERE courseNum= $inputCourseNum
AND book_type= 'A' 
ORDER BY AskingPrice;

-------------------------------------------------
List the books in BPUB's inventory and the number of each in stock:

SELECT isbn, count(title) 
FROM book_copy 
WHERE bookType= 'A';

-------------------------------------------------
Which sellers received checks with check numbers between150 & 156?
SELECT p.SSID
FROM payment p, seller s 
WHERE p.checkNum > 149 
AND p.checkNum < 157
AND p.SSID=s.SSID;


-------------------------------------------------
Which students have books in need of retrieval? 
(Hint: these are books with entries in "unretrieved book" that have not been sold to a distributor yet
; i.e., do not have an FK value for distributor)
Example of using Subquery from SO:
Select first_name, last_name, cust_id from customer where cust_id NOT IN ( Select cust_id from transactions)

SELECT  s.SID, s.Fname, s.Lname 
FROM  student s, unretrieved_Books ub
WHERE s.SID=ub.suid
AND WHERE DID=Null;

-------------------------------------------------
What is the average cost of the book copies for each book?
SELECT  isbn, avg( AskingPrice ) 
FROM  Book_Copy
GROUP BY isbn;


-------------------------------------------------
Which students have not sold any books? 
SELECT sid, Fname, Lname  
FROM student
WHERE sid  NOT IN ( SELECT SSID FROM Seller  );


-------------------------------------------------
Parameter query: Report the least expensive copy of a book whose title is entered. Hint – you will need to look up how to do this.

$isbnInput='isbnInput';

SELECT  bc.isbn, bc.AskingPrice 
FROM  book_Copy bc  
WHERE AskingPrice = (SELECT min(AskingPrice) FROM book_Copy )
AND WHERE bc.isbn= $isbnInput; 
 
